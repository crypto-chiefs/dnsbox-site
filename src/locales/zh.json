{
  "language": {
    "label": "语言切换器 (Yǔyán qiēhuàn qì)"
  },
  "layout": {
    "page_title": "DNSBox — SSL证书用于IP地址 | 即时DNS和HTTPS",
    "meta_description": "DNSBox - 通过HTTPS和DNS立即为任何IP地址提供SSL证书。适用于开发、物联网设备、临时服务器和自托管。免费SSL证书，支持WebSocket。",
    "meta_keywords": "ssl证书用于ip, dns服务, dnsbox, sslip.io替代品, 公共dns, https代理, ip dns, dns通过https, 通配符dns, 免费ssl证书, websocket dns, 即时域名, 网站应用开发, 物联网IoT, 临时服务器",
    "meta_language": "Chinese",
    "og_title": "DNSBox — SSL证书用于IP地址 | 即时DNS和HTTPS",
    "og_description": "通过HTTPS和DNS立即为任何IP地址提供SSL证书。适用于开发、物联网设备、临时服务器和自托管。",
    "og_url": "https://dnsbox.io/zh",
    "og_locale": "zh_CN",
    "og_image_alt": "DNSBox - SSL证书用于IP地址",
    "twitter_title": "DNSBox — SSL证书用于IP地址 | 开发和物联网应用",
    "twitter_description": "立即为任何IP地址获取SSL证书和DNS。适用于开发、物联网设备和临时服务器。",
    "github_button_label": "查看GitHub",
    "github_button_aria": "查看项目GitHub",
    "schema_description": "DNSBox - 提供通过HTTPS和DNS获取任何IP地址SSL证书的服务"
  },
  "header": {
    "title": "DNSBox — SSL证书用于IP地址",
    "subtitle": "使用<code>*.dnsbox.io</code>立即为任何IP地址获取SSL证书和DNS。无需配置域名。无需配置。"
  },
  "ssl": {
    "title": "IP地址的SSL证书",
    "benefit1_title": "适用于任何IP的HTTPS",
    "benefit1_text": "通过Let's Encrypt为任何IP地址获取SSL证书",
    "benefit2_title": "浏览器验证通过",
    "benefit2_text": "所有证书都经过官方验证，不会出现浏览器错误",
    "benefit3_title": "无需配置",
    "benefit3_text": "无需配置DNS或SSL服务器",
    "benefit4_title": "自动更新",
    "benefit4_text": "证书会自动更新"
  },
  "how_it_works": {
    "title": "它是如何工作的",
    "p1": "直接为IP地址获取SSL证书是不可能的：认证机构（包括Let's Encrypt）不会为裸IP颁发证书。<strong>DNSBox</strong>解决了这个问题——您可以在几秒钟内获得<strong>任何公共IP的免费SSL证书</strong>，无需设置域名或自己的DNS。",
    "p2": "我们会自动替换DNS并执行ACME验证，通过<code>123.123.123.123.dnsbox.io</code>的子域名颁发Let's Encrypt证书。支持<strong>IPv4</strong>和<strong>IPv6</strong>。一切都可以立即使用——只需通过DNSBox访问您所需的IP的HTTPS。",
    "p3": "DNSBox自动将IP地址映射到域名。只需在子域名中编码IP：",
    "ipv4": "<code>1.2.3.4.dnsbox.io</code> → <code>1.2.3.4</code>",
    "ipv6": "<code>2a01-4f8-c17-b8f--1.dnsbox.io</code> → <code>2a01:4f8:c17:b8f::1</code>",
    "https": "通过Let's Encrypt获取有效的SSL证书",
    "ws": "完全支持（保持Upgrade头部）"
  },
  "how_use": {
    "title": "使用场景",
    "subtitle": "DNSBox 是一个通用工具，允许通过 DNS 和 HTTPS 快速访问 IP 地址，无需复杂的配置：",
    "case1": "<strong>Web 开发与测试：</strong> 为本地和远程服务器创建临时域名。非常适合向客户展示项目并进行测试，无需更改 DNS 记录。",
    "case2": "<strong>物联网 (IoT)：</strong> 通过永久域名为动态网络中的 IoT 设备提供稳定的访问。简化设备的管理和监控。",
    "case3": "<strong>临时服务器：</strong> 即时为展示和临时项目获取域名。无需浪费时间购买和配置独立的域名。",
    "case4": "<strong>企业使用：</strong> 部署自己的 DNSBox 节点，完全控制 DNS 和 SSL 证书。确保数据的安全性和隐私性。"
  },
  "check": {
    "title": "✅ 如何检查一切是否正常工作",
    "intro": "设置 DNSBox 后，重要的是确保您的 <strong>IP 地址的 SSL 证书</strong> 已成功颁发并通过 HTTPS 可访问。以下是两种场景的说明：使用子域名 <code>IP.dnsbox.io</code> 和独立部署。",
    "scenario1_title": "1. 如果您使用 <code>IP.dnsbox.io</code>",
    "scenario1_desc": "DNSBox 自动为您的 IP 设置 DNS 和 HTTPS 代理，因此一切无需额外配置即可工作。",
    "dns_check_title": "检查 DNS 记录：",
    "dns_check_note": "预期的响应是 DNSBox 的其中一个 NS 服务器的 IP（例如，如果在安装时指定了 <code>167.172.5.205</code>）。",
    "https_check_title": "检查浏览器中的 HTTPS：",
    "https_check_note": "🔒 浏览器应显示 <strong>安全连接</strong>，并且 Let's Encrypt 的证书有效。",
    "scenario2_title": "2. 如果您独立部署了 DNSBox",
    "scenario2_desc": "在这种情况下，您管理自己的基础设施：域名、NS 记录和 DNSBox 服务器。请检查一切是否正常工作：",
    "ns_records_title": "检查域名的 NS 记录：",
    "ns_records_note": "确保返回 <code>ns1.example.com.</code>、<code>ns2.example.com.</code> 等记录。",
    "ns_ip_check_title": "检查 NS 服务器的 IP 地址：",
    "ns_ip_check_note": "响应应包含您的 VPS 服务器的实际 IP。",
    "zone_check_title": "通过特定 NS 服务器检查区域：",
    "zone_check_note": "确保域名解析到预期的 IP 地址。",
    "error_note": "📌 如果出现错误，请确保 DNS 正常工作，NS 记录正确，且 DNSBox 在所有 NS 服务器上运行。"
  },
  "details": {
    "title": "技术细节",
    "base_impl": "基础实现",
    "feature1": "用 Go 编写，HTTP/DNS 层没有第三方依赖",
    "feature2": "使用 miekg/dns 构建自有的 DNS 服务器",
    "feature3": "内置 DNS（UDP + TCP 端口 53）、HTTPS（:443）和 REST API（:80）",
    "feature4": "一个二进制文件和 systemd 单元 — 适用于服务器、VPS 和边缘节点",
    "dns_routing": "DNS 和路由",
    "ip_parsing": "从域名中解析 IP：",
    "supported_dns": "支持的 DNS 请求类型：",
    "dns1": "从域名获取 IP 地址",
    "dns2": "存储和复制 ACME 挑战",
    "dns3": "动态生成（包括对等发现）",
    "dns4": "可以通过 custom_domains.txt 手动指定",
    "customdns": "自定义 DNS 模块",
    "custom1": "允许通过 custom_domains.txt 添加自定义 A、CNAME、MX、TXT、AAAA 记录",
    "custom2": "文件嵌入为 embed.FS，无需外部配置管理",
    "custom3": "与基于 IP 的生成并行工作",
    "tls": "TLS 和 HTTPS",
    "tls1": "通过 dns-01 自动颁发 Let's Encrypt 证书",
    "tls2": "TXT 记录本地存储，并通过 REST API 在节点间同步",
    "tls3": "节点间证书加密：临时 ECDH（X25519）+ AES-GCM",
    "tls4": "证书保存在 /var/lib/dnsbox/certs 并在每个请求时自动验证",
    "ws": "WebSocket",
    "ws1": "支持 Connection: Upgrade + Upgrade: websocket",
    "ws2": "与任何 wss:// 客户端兼容，包括浏览器和 CLI 工具",
    "security": "安全性与限制",
    "sec1": "通过 blacklist.txt 阻止 IP（支持 IPv4、IPv6 和 CIDR）",
    "sec2": "对于被阻止的地址，不返回 HTTPS 和 DNS 响应",
    "sec3": "所有对等通信都使用临时密钥和加密传输",
    "deploy": "部署与配置",
    "env": "通过环境变量进行管理：",
    "install": "通过 curl | bash 一键安装，安装 systemd 单元",
    "flag1": "支持 --force-resolv 标志，用于禁用 systemd-resolved",
    "flag2": "支持 --debug 标志，启用所有日志"
  },
  "faq": {
    "title": "常见问题",
    "q1": "DNSBox 是做什么的？",
    "a1": "DNSBox 允许您为任何 IP 地址获得免费的 SSL 证书 — 即使您没有域名。您只需使用类似 123.123.123.123.dnsbox.io 的子域名，我们会自动颁发并维护证书。",
    "q2": "如何使用 DNSBox？",
    "a2": "只需将您的 IP 替换为 URL 中的 <code>IP.dnsbox.io</code>。例如：</br>\nhttps://167.172.5.205.dnsbox.io </br>\n我们会自动设置 DNS 和证书 — 您无需做任何事。",
    "q3": "可以使用 DNSBox 获取没有域名的 IP 地址的 HTTPS 吗？",
    "a3": "是的。这正是 DNSBox 的主要功能 — 您可以为 IP 地址获取 SSL 证书，而无需拥有域名。只需使用您的 IP 作为子域名，我们会通过 Let's Encrypt 自动进行 ACME 验证。",
    "q4": "这安全吗？",
    "a4": "是的。我们使用 Let's Encrypt 并通过 HTTPS 加密连接。您也可以自行验证收到的证书。",
    "q5": "这是免费的？",
    "a5": "是的，适用于公共使用 — 代码是开源的。",
    "q6": "DNSBox 支持哪些 IP 地址？",
    "a6": "支持任何公共的 IPv4 和 IPv6 地址。",
    "q7": "如果我使用动态 IP，怎么办？",
    "a7": "您可以使用 DNSBox，但证书只对您指定的 IP 地址有效。对于动态 IP 地址，我们建议使用 DDNS 服务。",
    "q8": "证书的有效期是多久？",
    "a8": "Let's Encrypt 的证书有效期为 90 天，我们会自动更新。",
    "q9": "我可以在生产环境中使用 DNSBox 吗？",
    "a9": "是的，DNSBox 适用于生产环境：CI/CD、公共 API、单页网站、IoT 设备 — 所有需要通过 IP 进行 HTTPS 访问的场景。",
    "q10": "需要注册吗？",
    "a10": "不需要。所有功能无需帐户。",
    "q11": "如果我的服务器没有响应或关闭了，会怎么样？",
    "a11": "如果无法通过 *.dnsbox.io 中指定的 IP 地址建立连接，浏览器将显示标准错误。DNSBox 会继续维护证书，一旦服务器恢复可用，证书会重新生效。",
    "q12": "如何进行 IP 验证以发放证书？",
    "a12": "我们通过子域名进行 DNS 验证。DNSBox 系统管理 dnsbox.io 的 DNS 区域，因此可以快速设置必要的 TXT 记录供 Let's Encrypt 使用。",
    "q13": "可以使用 DNSBox 处理内部或私有 IP 地址（例如 192.168.0.1）吗？",
    "a13": "不可以。该服务仅支持公共 IP 地址，且必须可通过互联网访问。",
    "q14": "代码在哪儿？",
    "a14": "<a href=\"https://github.com/crypto-chiefs/dnsbox\" target=\"_blank\" rel=\"noopener\">查看 GitHub 上的代码</a>"
  },
  "why": {
    "title": "为什么选择 DNSBox 获取 IP 地址的 SSL 证书？",
    "point1": "✨ 无需拥有或配置域名",
    "point2": "✨ 提供无域名的 Let's Encrypt SSL 证书",
    "point3": "✨ 支持任何 IP 地址（IPv4 和 IPv6），无需静态地址",
    "point4": "✨ 自动配置 DNS 和 HTTPS",
    "point5": "✨ 快速、可靠、公开并适用于生产环境",
    "point6": "✨ 适用于 API、CI/CD、DevOps、临时服务器和 VPN"
  },
  "seo": {
    "title": "如何为 IP 地址获取 SSL 证书",
    "p1": "普通的证书颁发机构（CA）不能直接为 IP 地址颁发证书。DNSBox 是一个独特的服务，可以通过动态 DNS 替代来解决这个限制。使用格式为 <code>IP.dnsbox.io</code> 的子域名，我们将通过 Let's Encrypt 执行验证并颁发有效的 HTTPS 证书。",
    "p2": "这是一个理想的解决方案，如果您需要 <strong>IP 服务器的 SSL</strong>，<strong>无域名的 API HTTPS</strong>，或者您正在处理 <strong>物联网（IoT）、测试环境、隧道</strong> 等无法注册域名的场景。"
  },
  "yourself": {
    "title": "想要自行部署吗？",
    "p1": "<strong>DNSBox</strong> 允许您在无需购买域名或设置 DNS 的情况下，直接为 IP 地址获得 <strong>SSL 证书</strong> — 您只需使用 <code>IP.dnsbox.io</code> 这样的子域名，一切将“开箱即用”。",
    "p2": "但是，如果您想要完全独立的实例，管理自己的 DNS 记录和证书，那么您需要手动配置基础设施：",
    "h1": "自定义部署所需的条件：",
    "steps": "1. ✅ <strong>购买域名</strong>（例如 <code>example.com</code>）。<br>2. 🖥 <strong>租用至少两台服务器</strong>，并且它们需要有公共的 <strong>静态 IP 地址</strong>，这些服务器将作为 NS 服务器使用。<br>3. 🛠 <strong>在注册商处创建 NS 记录</strong>，将这些 IP 地址指向这些服务器。例如：",
    "install_cmd_intro": "4. 🚀 <strong>在每台服务器上安装 DNSBox</strong>，并提供正确的参数：",
    "h2": "参数说明：",
    "params": "<code>--ip</code> — 当前服务器的公共 IP 地址（与 NS 记录中的相同）。<br><code>--domain</code> — 根域名，例如 <code>example.com</code>。<br><code>--ns</code> — 当前 NS 服务器的名称（如 <code>ns1</code>、<code>ns2</code> 等）。",
    "h3": "附加选项：",
    "extra_flags": "<code>--force-resolv</code> — 禁用 systemd-resolved（如果端口 53 被占用）。<br><code>--debug</code> — 启用详细日志记录 (<code>DNSBOX_DEBUG=true</code>)。",
    "h4": "📌 配置完成后，您的 DNSBox 将：",
    "li1": "作为权威 NS 服务器，",
    "li2": "处理 DNS 请求，",
    "li3": "通过 Let's Encrypt 自动获取 <strong>IP 地址的 SSL 证书</strong>，",
    "li4": "无需依赖 <code>dnsbox.io</code> 子域名即可提供 HTTPS 和 WSS 访问。",
    "h5": "💡 该解决方案非常适合您，如果您：",
    "li5": "希望完全控制基础设施，",
    "li6": "在裸 IP 上部署 API、开发服务或 VPN，",
    "li7": "创建需要无域名 HTTPS 的独立项目。",
    "footer": "🔗 查看源代码和文档：<br><a href=\"https://github.com/crypto-chiefs/dnsbox\" target=\"_blank\">github.com/crypto-chiefs/dnsbox</a>"
  },
  "footer": {
    "text": "© 2025 DNSBox.io — 由 crypto-chiefs 团队与 ❤️ 一起创建 · 基于 Go 运行"
  }
}